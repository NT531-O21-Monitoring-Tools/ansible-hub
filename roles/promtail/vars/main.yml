promtail_runtime_mode: "root"

promtail_scrape_docker:
  - job_name: docker
    pipeline_stages:
      - json:
          expressions:
            output: log
            stream: stream
            timestamp: time
            attrs: attrs
            tag: attrs.tag
      - regex:
          expression: (?P<image_name>(?:[^|]*[^|])).(?P<container_name>(?:[^|]*[^|])).(?P<image_id>(?:[^|]*[^|])).(?P<container_id>(?:[^|]*[^|]))
          source: "tag"
      - labels:
          tag:
          stream:
          image_name:
          container_name:
          image_id:
          container_id:   
      - timestamp:
          source: timestamp
          format: RFC3339Nano
      - output:
          source: output 
    static_configs:
      - targets:
          - localhost
        labels:
          region: "{{ region }}"
          scope: "{{ scope }}"
          hostname: "{{ inventory_hostname }}"
          service_name: docker
          __path__: /var/lib/docker/containers/*/*-json.log

promtail_scrape_mongo:
  - job_name: mongo
    pipeline_stages:
      - json:
          expressions:
            date: t.date
            severity: s
            component: c
            message_id: id
            context: ctx
            message: attr.message.msg
            ts_sec: attr.message.ts_sec
            ts_usec: attr.message.ts_usec
            thread: attr.message.thread
            session_name: attr.message.session_name
            category: attr.message.category
            category_id: attr.message.category_id
            verbose_level: attr.message.verbose_level
            verbose_level_id: attr.message.verbose_level_id
      - timestamp:
          source: date
          format: RFC3339Nano
      - labels:
          severity:
          component:
          context:
          category:
          verbose_level:
      - output:
          source: message
    static_configs:
      - targets:
          - localhost
        labels:
          region: "{{ region }}"
          scope: "{{ scope }}"
          hostname: "{{ inventory_hostname }}"
          service_name: mongod
          __path__: /var/log/mongodb/mongod.log

promtail_scrape_postgres:
  - job_name: postgres
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}\\.\\d{3} UTC) \\[(?P<pid>\\d+)\\] (?P<user_db>\\S+)? ?(?P<log_level>[A-Z]+):  (?P<message>.*)$'
      - timestamp:
          source: timestamp
          format: "2006-01-02 15:04:05.000 UTC"
      - labels:
          pid:
          log_level:
          user_db:
      - output:
          source: message
    static_configs:
      - targets:
          - localhost
        labels:
          region: "{{ region }}"
          scope: "{{ scope }}"
          hostname: "{{ inventory_hostname }}"
          service_name: postgres
          __path__: /var/log/postgresql/postgresql-*.log

promtail_scrape_haproxy:
  - job_name: haproxy
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\w+ \d+ \d+:\d+:\d+) (?P<host>[^ ]+) (?P<process>[^[]+)\[(?P<pid>\d+)\]: (?P<client_ip>[^ ]+):(?P<client_port>\d+) \[(?P<request_date>[^\]]+)\] (?P<frontend>[^ ]+)~ (?P<backend>[^ ]+)/(?P<server>[^ ]+) (?P<time_tq>\d+)/(?P<time_tw>\d+)/(?P<time_tc>\d+)/(?P<time_tr>\d+)/(?P<time_tt>\d+) (?P<http_status>\d+) (?P<bytes>\d+) (?P<captured_request_cookie>[^ ]+) (?P<captured_response_cookie>[^ ]+) (?P<termination_state>[^ ]+) (?P<actconn>\d+)/(?P<feconn>\d+)/(?P<beconn>\d+)/(?P<srv_conn>\d+)/(?P<retries>\d+) (?P<srv_queue>\d+)/(?P<backend_queue>\d+) "(?P<method>[^ ]+) (?P<uri>[^ ]+) (?P<protocol>[^"]+)"'
      - timestamp:
          source: timestamp
          format: "Jan 02 15:04:05"
      - labels:
          client_ip:
          frontend:
          backend:
          server:
          http_status:
          method:
          uri:
      - output:
          source: message
    static_configs:
      - targets:
          - localhost
        labels:
          region: "{{ region }}"
          scope: "{{ scope }}"
          hostname: "{{ inventory_hostname }}"
          service_name: haproxy
          __path__: /var/log/haproxy.log

promtail_scrape_pgpool:
  - job_name: pgpool
    pipeline_stages:
      - match:
          selector: '{job="pgpool"}'
          stages:
            - regex:
                expression: '^(?P<timestamp>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<hostname>[^ ]+)\s+pgpool\[(?P<pid>\d+)\]:\s+(?P<log_timestamp>\d+-\d+-\d+\s+\d+:\d+:\d+):\s+pid\s+(?P<log_pid>\d+):\s+(?P<log_level>\w+):\s+(?P<message>.*)$'
            - timestamp:
                source: log_timestamp
                format: "2006-01-02 15:04:05"
            - labels:
                log_level:
            - output:
                source: message
    static_configs:
      - targets:
          - localhost
        labels:
          region: "{{ region }}"
          scope: "{{ scope }}"
          hostname: "{{ inventory_hostname }}"
          service_name: pgpool
          __path__: /var/log/pgpool2/pgpool2.log